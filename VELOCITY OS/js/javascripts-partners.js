(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{173:function(e,t,n){var i=n(71),s=/[\\^$.*+?()[\]{}|]/g,o=RegExp(s.source);e.exports=function(e){return(e=i(e))&&o.test(e)?e.replace(s,"\\$&"):e}},174:function(e,t){e.exports="#define M_PI 3.1415926535897932384626433832795\n\nprecision highp float;\n\nattribute float alpha;\n\nuniform float revealAnimation; // Reveal animation progress, in range [0, 1]\nuniform float size;\nuniform float time;\nuniform float speed;\nuniform vec3 objectSize;\nuniform vec2 mouse; // in range [-1, 1]\nuniform vec2 mouseAnimated; // in range [-1, 1]\n\nuniform vec3 colorA;\nuniform vec3 colorB;\nuniform vec3 colorC;\n\nvarying vec3 vColor;\nvarying float vAlpha;\n\n// Depth test\nvarying float vViewZDepth;\n\n\n// Noise\nfloat rand(vec2 n) {\n\treturn fract(sin(dot(n, vec2(12.9898, 4.1414))) * 43758.5453);\n}\n\nfloat noise(vec2 p){\n\tvec2 ip = floor(p);\n\tvec2 u = fract(p);\n\tu = u*u*(3.0-2.0*u);\n\n\tfloat res = mix(\n\t\tmix(rand(ip),rand(ip+vec2(1.0,0.0)),u.x),\n\t\tmix(rand(ip+vec2(0.0,1.0)),rand(ip+vec2(1.0,1.0)),u.x),u.y);\n\treturn res*res;\n}\n\n\nfloat wave(float x, float size) {\n    float position = mod(x, 1.0);\n    if (position > 0.0 && position < size) {\n        float progress = position / size;\n        return sin(smoothstep(0.0, 1.0, progress) * M_PI);\n    } else {\n        return 0.0;\n    }\n}\n\n// Generate waves\nfloat waves (vec3 position) {\n    float velocity = time * speed;\n    float velocityAnimated = (time + mouseAnimated.y * 10.0) * speed;\n\n    // x and z are inverted in this visualization\n    float z = position.x / objectSize.x; // in range [-0.5, 0.5]\n    float x = position.z / objectSize.z; // in range [-0.5, 0.5]\n\n    // Waves\n    float wave1 = wave(x + velocity * 0.02 + 0.0, 0.5) * wave(z - 0.25, 0.3) * ${ wave1(0.3) };\n\n    float wave2 = wave(x + velocity * 0.02 + 0.0, 0.5) * wave(z - 0.25, 0.3) * ${ wave2(0.3) };\n    wave2 = wave2 + wave(x + velocity * 0.02 - 0.05, 0.2) * wave(z - 0.25, 0.3) * 0.3;\n\n    float wave6 = wave(x + velocity * 0.01 + 0.3, 0.5) * wave(z - 0.1, 0.3) * ${ wave6(0.3) };\n    float wave7 = wave(x + velocity * 0.03 - 0.3, 0.5) * wave(z - 0.15, 0.2) * ${ wave7(0.3) };\n\n    // Large wave in the middle\n    float waveMidLarge = cos(clamp(x * 10.0 + sin(z * 10.0 * .5 + velocityAnimated * 0.12) * 3., -M_PI, M_PI)) * .5 + .5;\n    waveMidLarge = pow(abs(waveMidLarge), 4.) * sin(z * 10.0 * .5 + velocity * 0.15) * ${ waveMidLarge(0.5) };\n\n    float waveMidMedium = cos(clamp(z * 25.0 + sin(x * 25.0 * .5 + velocity * 0.1) * 3., -M_PI, M_PI)) * .5 + .5;\n    waveMidMedium = pow(abs(waveMidMedium), 4.) * sin(x * 10.0 * .5 + velocityAnimated * 0.1) * 0.3;\n\n    // Large soft wave at the back\n    float waveBackLargeSoft1 = wave(z + velocity * 0.01 + -0.4, 0.5) * wave(x - 0.3, 1.0) * ${ waveBackLargeSoft1(0.8) };\n    float waveBackLargeSoft2 = wave(z + velocity * 0.024 + 0.1, 0.5) * wave(x - 0.23, 1.0) * ${ waveBackLargeSoft2(0.4) };\n\n    // Small soft waves\n    float waveSmallSoft1 = (sin(x * 100.0 + velocity * 0.5) + cos(x * 80.0+ velocity * 0.6) + sin(x * 60.0 + velocity * 0.7)) * 0.05;\n    waveSmallSoft1 = waveSmallSoft1 * wave(z - 0.1, 0.25) * ${ waveSmallSoft1(0.2) };\n\n    float waveSmallSoft2 = (sin(x * 95.0 + velocity * 0.7) + cos(x * 75.0 + velocity * 0.6) + sin(x * 55.0 + velocity * 0.5)) * 0.075;\n    waveSmallSoft2 = waveSmallSoft2 * wave(z + 0.4, 0.25) * ${ waveSmallSoft2(0.2) };\n\n    float waveSmallSoft3 = (sin(x * 70.0 + velocityAnimated * 0.45) + cos(x * 50.0 + velocity * 0.35) + sin(x * 30.0 + velocityAnimated * 0.45)) * 0.06;\n    waveSmallSoft3 = waveSmallSoft3 * wave(z + 0.3, 0.25) * ${ waveSmallSoft3(-1.0) };\n\n    float waveSmallSoft4 = (sin(x * 60.0 + velocity * 0.5) + cos(x * 40.0 + velocityAnimated * 0.35) + sin(x * 20.0 + velocity * 0.65)) * 0.075;\n    waveSmallSoft4 = waveSmallSoft4 * wave(z + 0.01, 0.25) * ${ waveSmallSoft4(0.65) };\n\n    float waveZ = sin(z * 20.0 + velocity * -0.2) * 0.1;\n\n    // Far side lower, closer side higher\n    float slope = x * -2.0;\n\n    // Wave height\n    float waveHeight = objectSize.y;\n\n    // Falloff, using ${} to add static properties to GUI\n    float falloff = (1.0 - smoothstep(${ falloffFrom(0.0) }, ${ falloffTo(-0.45) }, x));\n\n    return ((wave1 + wave2 + wave6 + wave7 + waveMidLarge + waveMidMedium + waveBackLargeSoft1 + waveBackLargeSoft2 + waveSmallSoft1 + waveSmallSoft2 + waveSmallSoft3 + waveSmallSoft4 + waveZ) * falloff + slope) * waveHeight;\n}\n\n// Returns offset for reveal animation, used for position and alpha animation\nfloat getRevealAnimationOffset (vec3 position, float offset) {\n    // float x = position.x / objectSize.x + 0.5; // in range [0.0, 1.0]\n    float z = position.z / objectSize.z + 0.5; // in range [0.0, 1.0]\n\n    float index = z;\n    float s = index + 1.0 - offset;\n    float e = -(1.0 - index);\n    float pos = smoothstep(0.0, 1.0, (e - s) * revealAnimation + s);\n\n    return pos;\n}\n\nfloat mid (float value, float minValue, float maxValue) {\n    return 1.0 - abs((value - minValue) / (maxValue - minValue) * 2.0 - 1.0);\n}\n\nvec3 waveReflection (vec3 color, float screenX, float z) {\n    float diff = 0.75;\n\n    // Reflection only on part of the screen\n    float screenPart = mid(screenX, mouseAnimated.x - 0.3, mouseAnimated.x + 0.3);\n    diff = smoothstep(0.0, 1.0, diff * screenPart);\n\n    //\n    float n = noise(vec2(position.x / 10.0 + time / 5.0, position.z / 10.0));\n    diff = diff * n;\n\n    // Make color lighter\n    diff = 1.0 + diff * 2.5;\n\n    color = color * diff;\n    color.r = clamp(color.r, 0.0, 1.0);\n    color.g = clamp(color.g, 0.0, 1.0);\n    color.b = clamp(color.b, 0.0, 1.0);\n\n    return color;\n}\n\nvoid main() {\n    vAlpha = alpha;\n\n    vec3 vPosition = position;\n    float vSizeMultiplier = 0.0;\n\n    // Waves\n    vPosition.y = vPosition.y - waves(position);\n\n    // Wave color\n    vec4 mvPosition = modelViewMatrix * vec4( vPosition, 1.0 );\n    gl_Position = projectionMatrix * mvPosition;\n\n    // Perspective divide/normalize\n    // Get screen coordinates, in range [-1, 1]\n    float screenX = gl_Position.x / gl_Position.w;\n\n    if (screenX < 0.0) {\n        vColor = mix(colorA, colorB, screenX + 1.0);\n    } else {\n        vColor = mix(colorB, colorC, screenX);\n    }\n\n    vColor = waveReflection(vColor, screenX, vPosition.z / objectSize.z);\n\n    // Reveal animation\n    vAlpha = vAlpha * (1.0 - getRevealAnimationOffset(position, 0.2));\n    vPosition.y = vPosition.y + getRevealAnimationOffset(position, 0.4) * objectSize.y * 0.3;\n\n    // Position\n    mvPosition = modelViewMatrix * vec4( vPosition, 1.0 );\n    gl_Position = projectionMatrix * mvPosition;\n\n    // Point size\n    gl_PointSize = size * ( 300.0 / -mvPosition.z ) * (1.0 + vSizeMultiplier);\n\n    // For depth test, used by depth shader\n    vViewZDepth = gl_Position.y / gl_Position.w * 50.0 + 20.0;\n}\n"},175:function(e,t){e.exports="uniform vec3 color;\nuniform sampler2D pointTexture;\n\nvarying vec3 vColor;\nvarying float vAlpha;\n\nvoid main() {\n    gl_FragColor = vec4( vColor, 1.0 );\n    gl_FragColor.w = texture2D( pointTexture, gl_PointCoord ).w * vAlpha;\n}\n"},176:function(e,t){e.exports="#define M_PI 3.1415926535897932384626433832795\n\nprecision highp float;\n\nattribute float alpha;\n\nuniform float revealAnimation; // Reveal animation progress, in range [0, 1]\nuniform float size;\nuniform float time;\nuniform float speed;\nuniform vec3 objectSize;\nuniform vec2 mouse; // in range [-1, 1]\nuniform vec2 mouseAnimated; // in range [-1, 1]\n\nuniform vec3 colorA;\nuniform vec3 colorB;\nuniform vec3 colorC;\n\nvarying vec3 vColor;\nvarying float vAlpha;\n\n// Depth test\nvarying float vViewZDepth;\n\nfloat wave(float x, float size) {\n    float position = mod(x, 1.0);\n    if (position > 0.0 && position < size) {\n        float progress = position / size;\n        return sin(smoothstep(0.0, 1.0, progress) * M_PI);\n    } else {\n        return 0.0;\n    }\n}\n\n// Generate waves\nfloat waves (vec3 position) {\n    float velocity = time * speed;\n    float velocityAnimated = (time + mouseAnimated.y * 10.0) * speed;\n    float x = position.x / objectSize.x; // in range [-0.5, 0.5]\n    float z = position.z / objectSize.z; // in range [-0.5, 0.5]\n\n    // Large soft wave at the back\n    float waveBackLargeSoft1 = wave(x + velocity * 0.01 + 0.4, 0.5) * wave(z - 0.3, 1.0) * 0.6;\n    float waveBackLargeSoft2 = wave(x + velocity * 0.012 + 0.6, 0.5) * wave(z - 0.23, 1.0) * 0.6;\n\n    // Left side lower, right side higher\n    float slope = x * -2.0;\n    float slopeZ = (z + 0.5) * 1.0;\n\n    // Wave height\n    float waveHeight = objectSize.y;\n\n    return (waveBackLargeSoft1 + waveBackLargeSoft2 + slopeZ) * (1.0 - smoothstep(0.4, 0.55, z)) * waveHeight;\n}\n\n// Returns offset for reveal animation, used for position and alpha animation\nfloat getRevealAnimationOffset (vec3 position, float offset) {\n    float z = position.z / objectSize.z + 0.5; // in range [0.0, 1.0]\n\n    float index = z;\n    float s = index + 1.0 - offset;\n    float e = -(1.0 - index);\n    float pos = smoothstep(0.0, 1.0, (e - s) * revealAnimation + s);\n\n    return pos;\n}\n\nvoid main() {\n    vAlpha = 1.0;\n\n    vec3 vPosition = vec3(0.0, 0.0, 0.0);\n    vec3 vSphere = vec3(0.0, 0.0, 0.0);\n\n    // Waves\n    vPosition = position;\n    vPosition.y = vPosition.y - waves(position);\n\n    // Wave color\n    vec4 mvPosition = modelViewMatrix * vec4( vPosition, 1.0 );\n    gl_Position = projectionMatrix * mvPosition;\n\n    // Perspective divide/normalize\n    // Get screen coordinates, in range [-1, 1]\n    float screenX = gl_Position.x / gl_Position.w;\n\n    if (screenX < 0.0) {\n        vColor = mix(colorA, colorB, screenX + 1.0);\n    } else {\n        vColor = mix(colorB, colorC, screenX);\n    }\n\n    // Fade out when Z is further away from camera\n    float z = position.z / objectSize.z; // in range [-0.5, 0.5]\n    vAlpha = smoothstep(0.0, 1.0, z * 2.0);\n\n    // Reveal animation\n    if (revealAnimation < 1.0) {\n        vAlpha = vAlpha * (1.0 - getRevealAnimationOffset(position, 0.2));\n        vPosition.y = vPosition.y + getRevealAnimationOffset(position, 0.4) * objectSize.y * 0.3;\n    }\n\n    // Position\n    mvPosition = modelViewMatrix * vec4( vPosition, 1.0 );\n    gl_Position = projectionMatrix * mvPosition;\n\n    // For depth test, used by depth shader\n    vViewZDepth = -mvPosition.z;\n}\n"},177:function(e,t){e.exports="varying vec3 vColor;\nvarying float vAlpha;\n\nvoid main() {\n    gl_FragColor = vec4(vColor, 1.0) * 0.3; // darken by 70%\n    // gl_FragColor = vec4(1.0);\n    gl_FragColor.w = vAlpha;\n}\n"},338:function(e,t,n){n(21),n(371),e.exports=n(368)},368:function(e,t,n){"use strict";n.r(t);var i=n(1),s=n(4),o=n.n(s),a=n(19),l=(n(25),n(0)),r=n(10),h=n(3);let c=null;function d(){if(!c){const e=document.createElement("canvas"),t=32,n=10;e.width=e.height=2*t;const i=e.getContext("2d");i.clearRect(0,0,e.width,e.height),i.beginPath(),i.arc(t,t,n,0,2*Math.PI,!1),i.fillStyle="#fff",i.fill(),$(e).css({position:"fixed",left:100,top:0}),c=new l.d(e)}return c}var p=n(174),u=n.n(p),v=n(175),f=n.n(v),m=n(176),g=n.n(m),w=n(177),b=n.n(w),x=n(30);const S=[0,-25,100],C=[.226,0,0],z=[300,10,150],y=[0,20,0],O=[0,10,0],P=[8421776,3425908,3638158],M=[14,27],A=(M[0]+M[1])/2,j={focalDepth:A,fstop:.42,maxblur:.8,showFocus:!1,manualdof:!1,vignetting:!0,depthblur:!1,shaderFocus:!1,threshold:.5,gain:2,bias:.5,fringe:.7,focalLength:16,noise:!1,pentagon:!1,dithering:1e-4,znear:4,zfar:150},_={x:{from:0,to:0},y:{from:-2/180*Math.PI,to:2/180*Math.PI},z:{from:0,to:0}},B=Object(x.b)(u.a);function k(e){return 100*h.a.lvh()/1200*(e||4)}function D(){const e=100*h.a.lvh();return window.innerWidth/e}n(26);var R=n(9),I=n.n(R),L=n(5),F=n(13),T=n(18);function N(){const e=new l.c,t=new Float32Array(15e4),n=new Float32Array(5e4),i=new l.v,s=Math.floor(Math.sqrt(z[0]/z[2]*5e4)),o=5e4/s;for(let e=0;e<5e4;e++){const a=Math.floor(e/s)/o,l=e%s/s;i.x=z[0]*(l-.5)+y[0],i.z=z[2]*(a-.5)+y[2],i.y=y[1],i.toArray(t,3*e),n[e]=Object(T.a)(1.5*a,0,1)}return e.setAttribute("position",new l.g(t,3)),e.setAttribute("alpha",new l.b(n,1)),new l.m(e,new l.q({uniforms:Object.assign({colorA:{value:new l.e(P[0])},colorB:{value:new l.e(P[1])},colorC:{value:new l.e(P[2])},mouse:{value:new l.u(0,0)},mouseAnimated:{value:new l.u(0,0)},pointTexture:{value:d()},time:{value:0},speed:{value:.3},size:{value:k()},revealAnimation:{value:0},screenRatio:{value:D()},animation:{value:0},objectSize:{value:new l.v(z[0],z[1],z[2])}},B.props),vertexShader:B.shader,fragmentShader:f.a,depthTest:!1,transparent:!0}))}function V(){const e=Math.floor(Math.sqrt(z[0]/z[2]*5e4)),t=5e4/e,n=new l.l(z[0],z[2],e,t),i=n.attributes.position.array,s=Math.floor(i.length/3);for(let e=0;e<s;e++){const t=3*e,n=i[t+1];i[t]+=O[0],i[t+1]=i[t+2]+O[1],i[t+2]=n+O[2]}return new l.i(n,new l.q({uniforms:{colorA:{value:new l.e(P[0])},colorB:{value:new l.e(P[1])},colorC:{value:new l.e(P[2])},time:{value:0},speed:{value:.3},revealAnimation:{value:0},animation:{value:0},objectSize:{value:new l.v(z[0],z[1],z[2])}},vertexShader:g.a,fragmentShader:b.a,blending:l.a,depthTest:!1,transparent:!0}))}class E{constructor(e){this.controller=e,this.camera=null,this.scene=null,this.mesh=null,this.renderer=null,this.controls=null,this.revealProgress=new F.a(0,{strength:.01,update:this.handleRevealProgressChange.bind(this)}),this.dotSize=4,e.on("resize",I()(this.handleResize.bind(this),60)),e.on("tick",this.render.bind(this)),this.initCamera(),this.initScene(),this.initRenderer(),this.initControls()}reveal(){this.revealProgress.set(1)}setRotation(e,t,n){this.setRotationOnMesh(e,t,n)}setRotationOnMesh(e,t,n){const i=Object(L.a)(_.x.from,_.x.to,t),s=Object(L.a)(_.y.from,_.y.to,e),o=Object(L.a)(_.z.from,_.z.to,n);this.mesh.rotation.set(i,s,o)}handleRevealProgressChange(e){const t=this.mesh.material,n=this.controller.postprocessing.materialDepth;this.meshBackdrop.material.uniforms.revealAnimation.value=e,t.uniforms.revealAnimation.value=e,n.uniforms.revealAnimation.value=e}setMouseFocalDepth(e){this.controller.postprocessing.setFocalDepth(e)}initCamera(){this.camera=function(){const e=new l.k(50,window.innerWidth/(100*h.a.lvh()),.1,1e3);return e.position.set(S[0],S[1],S[2]),e.rotation.set(C[0],C[1],C[2]),e}()}initControls(){this.controller.options.debug,0}initScene(){const e=this.scene=new l.p,t=this.mesh=N();e.add(t);const n=this.meshBackdrop=V();e.add(n)}initRenderer(){const e=this.renderer=new l.y;if(e.setPixelRatio(1),e.setSize(window.innerWidth,100*h.a.lvh()),e.toneMapping=l.o,e.autoClear=!1,this.controller.$canvas.append(e.domElement),!1===e.capabilities.isWebGL2&&!1===e.extensions.has("ANGLE_instanced_arrays"))throw new Error("WebGL2 is not supported")}handleResize(e){let{width:t,height:n}=e;var i;(i=this.camera).aspect=window.innerWidth/(100*h.a.lvh()),i.updateProjectionMatrix(),this.renderer.setSize(t,n),this.updateMaterialDotSize(),this.mesh.material.uniforms.screenRatio.value=D(),this.controller.postprocessing.materialDepth.uniforms.screenRatio.value=D()}updateMaterialDotSize(){this.mesh.material.uniforms.size.value=k(this.dotSize)}render(e){this.mesh.material.uniforms.time.value=.005*e,this.meshBackdrop.material.uniforms.time.value=.005*e,this.controller.postprocessing.isEnabled||(this.renderer.clear(),this.renderer.render(this.scene,this.camera))}}var W=n(6);class H{constructor(e){this.controller=e,this.mouseAnimation=new F.a({x:0,y:(A-M[0])/(M[1]-M[0])-.5},{strength:.04,update:this.updateMouseAnimated.bind(this)}),W.a.hasHoverSupport()&&(e.on("start",this.handleVisuzalizationStart.bind(this)),e.on("stop",this.handleVisuzalizationStop.bind(this)))}handleVisuzalizationStart(){$(document).on("mousemove."+this.controller.ns,this.handleMouseMove.bind(this))}handleVisuzalizationStop(){$(document).off("mousemove."+this.controller.ns)}handleMouseMove(e){const t=this.controller.$canvas.get(0).getBoundingClientRect().top,n=e.clientX,i=e.clientY-t,s=this.controller.app.mesh.material,o=this.controller.postprocessing.materialDepth,a=n/window.innerWidth*2-1,l=i/(100*h.a.lvh())*2-1;s.uniforms.mouse.value.set(a,l),o.uniforms.mouse.value.set(a,l),this.mouseAnimation.set({x:a,y:l})}updateMouseAnimated(e){let{x:t,y:n}=e;const i=this.controller.app.mesh.material,s=this.controller.postprocessing.materialDepth;i.uniforms.mouseAnimated.value.set(t,n),s.uniforms.mouseAnimated.value.set(t,n);const o=Object(L.a)(M[0],M[1],.5-n);this.controller.app.setMouseFocalDepth(o),this.controller.app.setRotation(t/2+.5,n/2+.5,0)}}class q{constructor(e){this.controller=e,this.renderer=e.app.renderer,this.scene=e.app.scene,this.camera=e.app.camera,this.materialDepth=null,this.materialBokeh=null,this.rtTextureColor=null,this.rtTextureDepth=null,this.uniforms=null,this.quad=null,this.postProcessingCamera=null,this.postProcessingScene=null,this.isEnabled=!1,e.on("resize",this.handleResize.bind(this)),e.on("tick",this.render.bind(this)),this.init(),this.setEnabled(!0)}setMaxBlur(e){this.uniforms.maxblur.value=e}setFringe(e){this.uniforms.fringe.value=e}setZNearFar(e,t){const n=this.materialDepth,i=this.uniforms;i.znear.value=e,i.zfar.value=t,n.uniforms.mNear.value=e,n.uniforms.mFar.value=t}setFocalDepth(e){this.uniforms.focalDepth.value=e}setEnabled(e){(e=!!e)!==this.isEnabled&&(this.isEnabled=!!e,e||(this.scene.overrideMaterial=null,this.renderer.setRenderTarget(null),this.controller.app.updateMaterialDotSize()))}handleResize(e){let{width:t,height:n}=e;this.rtTextureDepth.setSize(t,n),this.rtTextureColor.setSize(t,n),this.materialDepth.uniforms.size.value=k(this.controller.app.dotSize),this.uniforms.textureWidth.value=t,this.uniforms.textureHeight.value=n,this.postProcessingCamera.left=t/-2,this.postProcessingCamera.right=t/2,this.postProcessingCamera.top=n/2,this.postProcessingCamera.bottom=n/-2,this.postProcessingCamera.updateProjectionMatrix(),this.quad.scale.set(t,n,1)}init(){const e=window.innerWidth,t=100*h.a.lvh(),n=this.postProcessingScene=new l.p,i=this.postProcessingCamera=new l.j(e/-2,e/2,t/2,t/-2,-1e4,1e4);i.position.z=100,n.add(i),n.background=new l.e(263182);const s=this.materialDepth=new l.q({uniforms:Object.assign({mouse:{value:new l.u(0,0)},mouseAnimated:{value:new l.u(0,0)},time:{value:0},speed:{value:.3},size:{value:k()},revealAnimation:{value:0},screenRatio:{value:D()},animation:{value:0},objectSize:{value:new l.v(z[0],z[1],z[2])},mNear:{value:4},mFar:{value:150}},B.props),vertexShader:B.shader,fragmentShader:r.a.fragmentShader});s.uniforms.mNear.value=4,s.uniforms.mFar.value=150;const o=this.rtTextureDepth=new l.x(e,t),a=this.rtTextureColor=new l.x(e,t),c=this.uniforms=l.t.clone(r.b.uniforms);c.tColor.value=a.texture,c.tDepth.value=o.texture,c.textureWidth.value=e,c.textureHeight.value=t;for(let e in j)c[e].value=j[e];const d=this.materialBokeh=new l.q({uniforms:c,vertexShader:r.b.vertexShader,fragmentShader:r.b.fragmentShader,defines:{RINGS:3,SAMPLES:3}}),p=this.quad=new l.i(new l.l(1,1),d);p.scale.set(e,t,1),p.position.z=-500,n.add(p)}render(e){if(this.isEnabled){this.materialDepth.uniforms.time.value=.005*e;const t=this.renderer,n=this.scene,i=this.camera,s=this.controller.app.meshBackdrop;let o=s.visible;t.clear(),t.setRenderTarget(this.rtTextureColor),t.clear(),t.render(n,i),s.visible=!1,n.overrideMaterial=this.materialDepth,t.setRenderTarget(this.rtTextureDepth),t.clear(),t.render(n,i),s.visible=o,n.overrideMaterial=null,t.setRenderTarget(null),t.render(this.postProcessingScene,this.postProcessingCamera)}}}class X extends a.a{static get Defaults(){return i.a.extend({},a.a.Defaults,{})}init(){this.app=new E(this),this.postprocessing=new q(this),this.hover=new H(this)}}i.a.fn.visualizationPartners=o()(X)},371:function(e,t,n){"use strict";n.r(t),n.d(t,"default",(function(){return y}));var i=n(1),s=n(4),o=n.n(s),a=n(20),l=n.n(a),r=n(15),h=n(12);function c(e){return e||0===e?String(e):""}function d(e,t){let n=e;for(let e=0;e<n.length;e++){const i=n[e];if(i.options)n=n.concat(i.options);else{const e=t(i);if(null!=e)return e}}return null}var p=n(173),u=n.n(p);var v=n(9),f=n.n(v),m=(n(22),n(79)),g=n.n(m),w=n(13),b=n(18),x=n(32),S=n(29);class C{static get Defaults(){return{}}constructor(e,t){this.options=i.a.extend({},this.constructor.Defaults,t),this.$container=e,this.$content=e.find(".js-custom-scroll-content"),this.constraints={max:0},this.ns=Object(h.a)(),this.inview=new S.a(e,{enter:this.update.bind(this)}),e.on("destroyed",this.destroy.bind(this))}destroy(){this.scroller&&(this.$container.off("."+this.ns),Object(i.a)(window).off("."+this.ns),this.scroller.destroy(),this.scroller=null,this.inview.destroy())}init(){this.initScroller(),this.initScrollbar()}initScroller(){(this.scroller=new g.a({el:this.$container.get(0),useTouch:!1,useKeyboard:!1})).on(this.handleScroll.bind(this)),this.animation=new w.a(0,{strength:.15,update:this.updateScroll.bind(this)}),this.$container.on("mousewheel."+this.ns,!1).on("wheel."+this.ns,!1).on("appear."+this.ns,this.update.bind(this)),Object(i.a)(window).on("resize."+this.ns,f()(this.update.bind(this),60))}initScrollbar(){const e=Object(i.a)('<div class="custom-scroll__scrollbar__content" />'),t=Object(i.a)('<div class="custom-scroll__scrollbar" />').append(e);this.$container.append(t),this.$scrollbar=t,this.$scrollbarInner=e}handleScroll(e){const t=this.animation,n=Object(b.a)(t.getTarget()-e.deltaY,0,this.constraints.max);this.animation.set(n)}updateConstraints(){this.$content.css("transform",""),this.$scrollbar.css("transform","");const e=this.$container,t=e.get(0).offsetHeight,n=Math.max(t,e.get(0).scrollHeight),i=n-t,s=this.animation,o=s.get(),a=s.getTarget(),l=this.$scrollbar.height(),r=Math.floor(t/(t+n)*l);o>i&&s.reset(i),a>i&&s.set(i),this.constraints={max:i,scrollbarHeight:l,scrollbarInnerHeight:r},e.toggleClass("custom-scroll--disabled",0===i),this.$scrollbarInner.css("height",r+"px")}updateScroll(e){const t=this.constraints,n=(t.scrollbarHeight-t.scrollbarInnerHeight)*(e/t.max);this.$content.css("transform",`translateY(${-e}px)`),this.$scrollbarInner.css("transform",`translateY(${n}px)`)}update(){this.scroller||this.init(),this.updateConstraints(),this.updateScroll(this.animation.get())}}i.a.fn.customScroll=o()((function(e,t){return x.a?new C(e,t):{update(){},updateScroll(){}}}));class z{constructor(e){this.input=e,this.options=e.options,this.ns=Object(h.a)(),this.query="",this.focused=null,this.ignoreBottomSpace=!!this.options.ignoreBottomSpace,this.limitText=this.options.limitText}destroy(){this.input.$select.off("."+this.ns).removeAttr("tabindex"),$(window).off("."+this.ns),this.$dropdown&&(this.$dropdown.remove(),this.$dropdown=null)}renderSearch(){if(this.options.search){return`\n                <div class="${this.options.dropdownClassName}__search">\n                    ${this.options.searchLabel?`<label class="form-label">${this.options.searchLabel}</label>`:""}\n                    <svg class="icon icon-search-small" width="16" height="16" aria-hidden="true" viewBox="0 0 16 16" style="--icon-width: 16; --icon-height: 16;"><use href="/assets/images/icons.svg#search-small" xlink:href="/assets/images/icons.svg#search-small"></use></svg>\n                    <input\n                        type="search"\n                        class="js-input-select-search"\n                        autocorrect="off"\n                        autocapitalize="none"\n                        spellcheck="false"\n                        autocomplete="new-password"\n                        aria-autocomplete="list"\n                        role="searchbox"\n                        aria-label="Search"\n                        aria-controls="dropdown-${this.ns}"\n                    />\n                </div>\n            `}return""}renderList(){const e=this.options.dropdownClassName,t=this.input.getOptions();return`\n            <div class="${e}__list js-input-select-list-wrapper"  data-plugin="customScroll">\n                <ul class="js-input-select-list js-custom-scroll-content" role="listbox" id="dropdown-${this.ns}" ${this.options.search?"":'tabindex="0"'}>\n                    ${t.map(t=>t.options?`\n                                <li\n                                    class="${e}__list__group"\n                                >\n                                    ${t.text?`\n                                        <span class="${e}__list__group__title leading-trim">\n                                            ${t.text}\n                                        </span>\n                                    `:""}\n                                    <ul>\n                                        ${t.options.map(e=>this.renderOption(e)).join("")}\n                                    </ul>\n                                </li>\n                            `:this.renderOption(t)).join("")}\n                </ul>\n            </div>\n        `}renderOption(e){const t=this.options.dropdownClassName,n=this.input.getOption(),i=this.input.getOptionIndex();let s=e.text;return this.limitText&&s.length>this.limitText&&(s=s.substr(0,this.limitText),-1!==s.indexOf("(")&&-1===s.indexOf(")")?s+="</small>...":s+="..."),e.valid?`\n                <li\n                    class="${t}__list__item js-input-select-item ${e.disabled?"is-disabled":""} ${n&&e.value===n.value?"is-active":""} ${e.index===i?"is-focused":""}" data-value="${l()(e.value)}"\n                    aria-selected="${e.index===i?"true":"false"}"\n                    role="option"\n                >\n                    <a>\n                        ${e.image?`<img src="${e.image}" alt="${s}">`:""}\n                        <span class="js-input-select-item-text">${s.replaceAll("(","<small>(").replaceAll(")",")</small>").replace(/\s/g,"&nbsp;")}</span>\n                    </a>\n                </li>\n            `:""}renderDropdown(){const e=this.options.dropdownClassName;return`\n            <div\n                class="${e} ${this.options.search?e+"--search":""} is-invisible js-input-select-dropdown"\n                aria-hidden="true"\n                aria-expanded="false"\n            >\n                ${this.renderSearch()}\n                ${this.renderEmptyMessage()}\n                ${this.renderList()}\n                ${this.renderButton()}\n            </div>\n        `}renderButton(){if(this.options.dropdownButton){const e=this.options.dropdownButton;return`\n                <div class="${this.options.dropdownClassName}__button js-input-select-button">\n                    <a class="btn btn--primary btn--outline btn--xs" href="${e.href}" tabindex="0" role="button">\n                        <span class="btn__content">\n                            <span class="btn__text ">${e.text}</span>\n                        </span>\n                    </a>\n                </div>\n            `}return""}renderEmptyMessage(){return this.options.searchEmptyMessage?`<span class="js-input-select-empty-message text--lead leading-trim ${this.options.dropdownClassName}__empty is-hidden">${this.options.searchEmptyMessage}</span>`:""}render(){this.$dropdown=$(this.renderDropdown()),this.$listWrapper=this.$dropdown.find(".js-input-select-list-wrapper"),this.$list=this.$dropdown.find(".js-input-select-list"),this.$search=this.$dropdown.find(".js-input-select-search"),this.$button=this.$dropdown.find(".js-input-select-button"),this.$search.on("input",this.handleFilter.bind(this)),this.isVisible=!1,this.options.searchEmptyMessage&&(this.$emptyMessage=this.$dropdown.find(".js-input-select-empty-message")),this.updateOptions(),this.$list.on("click",".js-input-select-item",this.handleItemClick.bind(this)),this.$list.on("mouseenter",".js-input-select-item",this.handleItemHover.bind(this)),this.$list.on("mouseleave",this.handleMouseLeave.bind(this)),this.$dropdown.add(this.input.$select).on("keydown",this.handleKey.bind(this)),this.input.$container.append(this.$dropdown).plugins(),this.input.$container.trigger("dropdownRendered")}updateOptions(){const e=this.$dropdown.find(".js-input-select-item"),t={};for(let n=0;n<e.length;n++){const i=e.eq(n),s=c(i.data("value")),o=[];d(this.input.getOptions(),e=>{e.value===s&&o.push(e)}),t[s]=s in t?t[s]+1:0;const a=o[t[s]];a.$item=i,a.$text=i.find(".js-input-select-item-text")}}open(e){this.openCallback=e,this.$dropdown?this.setFocused(this.input.getOptionIndex()):this.render(),this.closeCallback&&(this.closeCallback(),this.closeCallback=null),this.$dropdown.transitionstop(()=>{this.options.animationIn?this.$dropdown.transition(this.options.animationIn,{before:this.beforeOpen.bind(this),after:this.afterOpen.bind(this)}):(this.$dropdown.removeClass("is-hidden").removeClass("is-invisible"),this.beforeOpen(),this.afterOpen())})}beforeOpen(){this.$dropdown.attr("aria-hidden","false").attr("aria-expanded","true"),this.$search.length?(this.$search.get(0).focus(),this.input.$select.attr("tabindex","-1")):(this.$list.get(0).focus(),this.input.$select.attr("tabindex","-1")),this.reposition()}afterOpen(){this.isVisible=!0,this.openCallback&&(this.openCallback(),this.openCallback=null)}close(e){this.closeCallback=e,this.openCallback&&(this.openCallback(),this.openCallback=null),this.$dropdown.transitionstop(()=>{this.options.animationOut?this.$dropdown.transition(this.options.animationOut,{before:this.beforeClose.bind(this),after:this.afterClose.bind(this)}):(this.$dropdown.addClass("is-hidden"),this.beforeClose(),this.afterClose())})}beforeClose(){this.$dropdown.attr("aria-hidden","true").attr("aria-expanded","false"),this.input.$select.removeAttr("tabindex"),this.$search.val(""),this.filter("")}afterClose(){this.isVisible=!1,this.closeCallback&&(this.closeCallback(),this.closeCallback=null)}handleFilter(){let e=this.$search.val().trim();e.length<2&&(e=""),this.filter(e)}filter(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";const t=this.input.getOptions();let n=!1;d(t,t=>{if(t.valid){const i=!e||-1!==t.text.toLowerCase().indexOf(e.toLowerCase()),s=i&&e;if(i&&(n=!0),t.visible!==i&&t.$item&&(t.$item.toggleClass("is-hidden",!i),t.visible=i),i&&(s||t.filtered)){let n;t.filtered=s,n=e?function(e,t){if(t){const n=new RegExp(`^(.*?)(${u()(t)})(.*)$`,"i");return e.replace(n,(function(e,t,n,i){return`${l()(t)}<b>${l()(n)}</b>${l()(i)}`}))}return e}(t.text,e):t.text.replaceAll("(","<small>(").replaceAll(")",")</small>"),n=n.replace(/\s/g,"&nbsp;"),t.$text.html(n)}}}),this.options.searchEmptyMessage&&this.$emptyMessage.toggleClass("is-hidden",n||!e),this.$listWrapper.toggleClass("is-hidden",!n);const i=this.input.$container.find('[data-plugin="customScroll"]');i.customScroll("update"),i.customScroll("updateScroll",0)}setValue(e){d(this.input.getOptions(),t=>{t.$item&&t.$item.toggleClass("is-active",t.value===e)})}setFocused(e){d(this.input.getOptions(),t=>{t.$item&&(t.$item.toggleClass("is-focused",t.index===e).attr("aria-selected",t.index===e),t.index===e&&this.$search.length&&this.$search.attr("aria-activedescendant",t.id))}),this.focused=e}handleItemClick(e){const t=$(e.currentTarget).data("value");this.input.setValue(t),this.input.close()}handleItemHover(e){const t=$(e.currentTarget).data("value"),n=this.input.getOptionIndex(t);this.setFocused(n)}handleMouseLeave(){this.$dropdown.find(".js-input-select-item").removeClass("is-focused")}handleKey(e){if(this.input.isOpen)if(13===e.which){e.preventDefault();const t=this.input.getOptionByIndex(this.focused);t&&t.valid&&this.input.setValue(t.value),this.input.close()}else 40===e.which?(this.setFocused(this.getNextIndex()),e.stopPropagation()):38===e.which&&(this.setFocused(this.getPrevIndex()),e.stopPropagation());else 13===e.which&&this.input.open()}getFirstIndex(){const e=this.input.getOptions();for(let t=0;t<e.length;t++)if(e[t].valid&&e[t].visible)return t}getNextIndex(){const e=this.focused;if(!e&&0!==e)return this.getFirstIndex();const t=this.input.getOptionByIndex(e)||this.input.getOptionByIndex(0);let n=t?t.next:null;for(;n&&n!==t;){if(n.visible)return n.index;n=n.next}return e}getPrevIndex(){const e=this.focused;if(!e&&0!==e)return this.getFirstIndex();const t=this.input.getOptionByIndex(e)||this.input.getOptionByIndex(0);let n=t?t.previous:null;for(;n&&n!==t;){if(n.visible)return n.index;n=n.previous}return e}reposition(){const e=this.options.positionTopClassName,t=this.$dropdown,n=this.input.$container;t.removeClass(e);const i=t.get(0).getBoundingClientRect(),s=n.get(0).getBoundingClientRect();let o=!0;if(!this.ignoreBottomSpace&&i.top+i.height>window.innerHeight){const e=i.top-s.top;s.top+s.height-i.height-e>0&&(o=!1)}t.toggleClass(e,!o)}}class y extends r.a{static get Defaults(){return i.a.extend({},r.a.Defaults,{enableTouch:!1,search:!1,searchLabel:"",searchEmptyMessage:"",enabledClassName:"form-control--select--with-dropdown",openedClassName:"form-control--select--opened",closeButtonClassName:".js-form-control-select-close",focusedClassName:"is-focused is-active",notEmptyClassName:"is-not-empty",dropdownClassName:"select-dropdown",animationIn:"dropdown-clip-in",animationOut:"dropdown-clip-out",positionTopClassName:"select-dropdown--pos-top",dropdownButton:!1,autocompleteEndpoint:null,ignoreBottomSpace:null,limitText:null})}init(){this.$select=this.$container.find("select"),this.$label=this.$container.find(this.options.labelSelector),this.$closeButton=this.$container.find(this.options.closeButtonClassName),this.dropdown=null,this.optionsCache=null,this.isOpen=!1,this.isClosing=!1}enable(){super.enable()&&(this.$container.addClass(this.options.enabledClassName),this.dropdown=new z(this),this.$select.on("change."+this.ns,this.updateLabel.bind(this)),this.$select.on("click."+this.ns,this.open.bind(this)),this.$closeButton.on("click."+this.ns,this.close.bind(this)),this.$container.on(`mousedown.${this.ns} click.${this.ns} focusin.${this.ns}`,this.open.bind(this)),this.$container.on("focusout."+this.ns,f()(this.handleBlur.bind(this),16)))}disable(){super.disable()&&(this.$select.off("."+this.ns),this.$container.off("."+this.ns),this.$container.removeClass(this.options.enabledClassName),this.dropdown&&(this.dropdown.destroy(),this.dropdown=null))}open(e){this.isOpen||this.isClosing||this.getDisabled()||this.getReadOnly()||(this.isOpen=!0,this.getDropdown().open(),this.$container.addClass(this.options.focusedClassName),this.$container.addClass(this.options.openedClassName)),e&&!Object(i.a)(e.target).closest(".js-input-select-button").length&&e.preventDefault()}close(){this.isOpen&&(this.isOpen=!1,this.isClosing=!0,this.$container.removeClass(this.options.focusedClassName),this.getDropdown().close(()=>{this.$container.removeClass(this.options.openedClassName),this.isClosing=!1}))}getDropdown(){return this.dropdown||(this.dropdown=new z(this)),this.dropdown}handleBlur(){Object(i.a)(document.activeElement).closest(this.$container).length||this.close()}setValue(e){const t=c(e),n=this.getOption(e);n&&(this.$container.toggleClass(this.options.notEmptyClassName,!!n.text.length),this.$select.val(t).trigger("change"),this.dropdown&&this.dropdown.setValue(t))}getValue(){return c(this.$select.val())}updateLabel(){const e=this.getOption(),t=e?e.text:"";if(this.$label.is("input"))this.$label.val(t);else{let e=l()(t);if(-1===e.indexOf("<small>")){const t=e.split("(").length,n=e.split(")").length;t&&t===n&&(e=e.replaceAll("(","<small>(").replaceAll(")",")</small>"))}e=e.replace(/\s/g,"&nbsp;"),this.$label.html(e)}}getOptionIndex(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null;const t=this.getOption(e);return t?t.index:-1}getOption(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null;const t=null===e?this.getValue():c(e);return d(this.getOptions(),e=>{if(e.value===t)return e})}getOptionByIndex(e){return d(this.getOptions(),t=>{if(t.index===e)return t})}getOptions(){return this.optionsCache||(this.optionsCache=function(e){const t=Object(h.a)();let n=0,i=null,s=null,o=null;const a=function(e){if(e.is("option")){let a=e.attr("id");a||(a=`dropdown-${t}-${n}`,e.attr("id",a));const l=e.text().trim(),r=c(e.attr("value")),h=e.data("hidden"),d={index:n++,valid:!h&&!!l,next:null,previous:o,value:r,text:l,image:e.data("image")||null,disabled:e.prop("disabled")||!1,empty:!l.length,$item:null,$text:null,id:a,visible:!h,filtered:!1};return d.valid&&(i=i||d,s=d,o&&(o.next=d),o=d),d}if(e.is("optgroup")){const t=e.children("option"),n=[];for(let e=0;e<t.length;e++){const i=a(t.eq(e));i&&n.push(i)}return{text:e.attr("label"),options:n}}},l=[],r=e.children();for(let e=0;e<r.length;e++){const t=r.eq(e),n=a(t);n&&l.push(n)}return i&&s&&(i.previous=s,s.next=i),l}(this.$select)),this.optionsCache}setOptions(e){if(void 0!==e){const t=this.$select,n=this.getValue();this.optionsCache=null,t.empty();for(let n=0;n<e.length;n++){const s=e[n];if(s.options){const e=Object(i.a)("<optgroup />").attr("label",s.label||s.title||s.text).appendTo(t);for(let t=0;t<s.options.length;t++)this.addOption(s.options[t],!1,e)}else this.addOption(s,!1)}t.val(n)}}addOption(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null;const s=Object(i.a)("<option />");s.text(e.label||e.text||e.title),s.attr("value",e.value||e.id),s.prop("disabled",e.disabled),e.hidden&&s.attr("data-hidden",e.hidden),e.image&&s.data("image",e.image),(n||this.$select).append(s),t&&this.refresh()}getDisabled(){return this.$select.prop("disabled")}getReadOnly(){return this.$select.attr("readonly")}refresh(){this.optionsCache=null,this.close(),this.dropdown&&(this.dropdown.destroy(),this.dropdown=null)}}i.a.fn.inputSelect=o()(y)}},[[338,0]]]);